<h2>BasicApp demo</h2>
<p style="color: green"><%= flash[:notice] %></p>
BasicApp is a basis for a Ext.Viewport-based widget ("application"). Currently it supports:<br>
* Dynamic loading of widgets (the same way as any other Netzke widget): when you select a menu item, it does exactly that.<br>
* Authentification support: it will display a logout button right on the toolbar if a user is logged in.<br>
* Restoring the last loaded widget: try to re-enter the URL, or logout/login, and the BasicApp will automatically load your last viewed content. This is done on the per user basis, as for any other Netzke widget.<br>
* Browser history support (by means of the browser's Back/Forward buttons): press the "Back"-button to go to the previously loaded widget (and "Forward" - to go forward, yay)<br>
* FeedbackGhost-widget powered feedback: try to edit the data in the grid to see it in action<br>
* Aggregation of widget's own menus (TODO: coming soon): if a widget provides its own menu, that gets automatically added by the BasicApp to the toolbar along with loading the widget<br>

<p>Also note that Netzke provides widget class caching: for instance, once a GridPanel is loaded from the server by the BaseApp, it will never be requested again, which 1) significantly reduces the traffic, 2) lets the browser to parse the class only once, increasing the speed even more. Also, the caching provides an advantage in the case when a compound widget (an example of a compound widget aggregating two GridPanels is coming up here soon) re-uses another widget whose class has already been loaded.</p>
<p>And of course, all the goodies of the GridPanel widget (column resize/move, dynamic configuration, etc - see <%= link_to "GridPanel demo", :controller => "grid_panel", :action => "demo" %>) are inherently accessible </p>

<p><%= link_to "Load the BasicApp demo!", :action => "demo" %></p>
<p><%= link_to "See the code for this demo", :action => "code" %> (short and simple :)</p>
<p><%= link_to "Back home", root_url %></p>
<%- if current_user -%>
<p><%= link_to "Log out #{current_user.login}", user_session_url, :method => :delete %></p>
<%- end -%>

<p>Authorization is powered by the wonderful authlogic gem</p>